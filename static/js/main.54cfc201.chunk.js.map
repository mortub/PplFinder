{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","contexts/favoriteUsersContext.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","components/FavoriteUserList/FavoriteUserList.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","initialState","newFavoriteUsers","localStorage","getItem","JSON","parse","fetchFavoriteUsers","actions","reducer","state","action","type","addUser","payload","removeUser","userId","user","setItem","stringify","favoriteUsersContext","createContext","FavoriteUsersProvider","useReducer","dispatch","Provider","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","COUNTRY_NAMES_BY_ISO_2","React","forwardRef","usersRef","users","isLoading","toggleFavoriteUser","setUsersRef","useContext","useState","hoveredUserId","setHoveredUserId","filteredUsers","setFilteredUsers","checkedCountries","setCheckedCountries","handleMouseLeave","filterUsersAccordingToCountry","useCallback","toggleCountryCheck","isAllUnchecked","setFilterUsersAccordingToCountries","countryNames","getAllCheckedCountryNames","newfilteredUsers","filter","includes","location","country","Object","keys","map","key","values","every","useEffect","current","index","onMouseEnter","handleMouseEnter","onMouseLeave","ref","length","src","picture","large","alt","name","title","first","last","email","street","number","city","onClick","IconButton","Home","Content","Header","setUsers","page","setPage","setIsLoading","observer","IntersectionObserver","entries","a","isIntersecting","fetchUsers","axios","get","response","newUsers","data","results","usePeopleFetch","useRef","observe","FavoriteUserList","favoriteUsers","setFavoriteUsers","updateFavoriteUsersFlag","setUpdateFavoriteUsersFlag","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","useMemo","createMuiTheme","palette","primary","main","error","CssBaseline","routes","NavBar","pathname","useLocation","indexOf","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","AppRouter","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.54cfc201.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { createContext, useReducer } from 'react';\r\n\r\nconst fetchFavoriteUsers = () =>{\r\n    let newFavoriteUsers = localStorage.getItem('favoriteUsers') ?? {};\r\n    if(newFavoriteUsers !== null){\r\n      newFavoriteUsers = JSON.parse(newFavoriteUsers);\r\n    }\r\n    return newFavoriteUsers;\r\n}\r\n\r\nconst initialState = fetchFavoriteUsers();\r\n\r\nconst actions = {\r\n    ADD_USER: \"ADD_USER\",\r\n    REMOVE_USER: \"REMOVE_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case actions.ADD_USER:\r\n            return addUser(state, action.payload);\r\n        case actions.REMOVE_USER: {\r\n            return removeUser(state, action.payload)\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst addUser = (state, payload) => {\r\n    const userId = payload.userId;\r\n    const user = payload.user;\r\n    state[userId] = user;\r\n    localStorage.setItem('favoriteUsers', JSON.stringify(state));\r\n    return state;\r\n}\r\n\r\nconst removeUser = (state, payload) => {\r\n    const userId = payload.userId;\r\n    delete state[userId];\r\n    localStorage.setItem('favoriteUsers', JSON.stringify(state));\r\n    return state;\r\n}\r\n\r\n\r\nexport const favoriteUsersContext = createContext();\r\n\r\nexport const FavoriteUsersProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n        <favoriteUsersContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </favoriteUsersContext.Provider>\r\n    );\r\n};","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { favoriteUsersContext } from '../../contexts';\r\nimport * as S from \"./style\";\r\n\r\nconst COUNTRY_NAMES_BY_ISO_2 = {\r\n  \"BR\":\"Brazil\",\r\n  \"AU\":\"Australia\",\r\n  \"CA\":\"Canada\",\r\n  \"DE\":\"Germany\",\r\n  \"ES\": \"Spain\"\r\n}\r\n\r\nconst UserList = React.forwardRef(({ users, isLoading, toggleFavoriteUser, setUsersRef }, usersRef) => {\r\n  const {state, dispatch } = useContext(favoriteUsersContext);\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [checkedCountries, setCheckedCountries] = useState({\r\n    \"BR\":false,\r\n    \"AU\":false,\r\n    \"CA\":false,\r\n    \"DE\":false,\r\n    \"ES\":false\r\n  });\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const filterUsersAccordingToCountry = useCallback((value) => {\r\n    toggleCountryCheck(value);\r\n    if(isAllUnchecked()){\r\n      setFilteredUsers(users);\r\n      return;\r\n    }\r\n    setFilterUsersAccordingToCountries();\r\n  });\r\n\r\n  const toggleCountryCheck = (value) =>{\r\n    checkedCountries[value] = !checkedCountries[value];\r\n    setCheckedCountries(checkedCountries);\r\n  }\r\n\r\n  const setFilterUsersAccordingToCountries = () =>{\r\n    const countryNames = getAllCheckedCountryNames();\r\n    const newfilteredUsers = users.filter((user)=> countryNames.includes(user?.location.country));\r\n    setFilteredUsers(newfilteredUsers);\r\n  }\r\n\r\n  const getAllCheckedCountryNames = () =>{\r\n    const countryNames = Object.keys(checkedCountries).map((key)=>{\r\n      if(checkedCountries[key]){return COUNTRY_NAMES_BY_ISO_2[key]}\r\n    });\r\n    return countryNames;\r\n  }\r\n\r\n  const isAllUnchecked = () =>{\r\n    return Object.values(checkedCountries).every((value)=> value === false);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(isAllUnchecked()){setFilteredUsers(users);}\r\n  },[users]);\r\n\r\n  useEffect(()=>{\r\n    if(setUsersRef){setUsersRef(usersRef)}\r\n  },[usersRef?.current]);\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"ES\" label=\"Spain\" onChange={filterUsersAccordingToCountry} isChecked={checkedCountries[\"ES\"]} />\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={filterUsersAccordingToCountry} isChecked={checkedCountries[\"BR\"]} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={filterUsersAccordingToCountry} isChecked={checkedCountries[\"AU\"]}/>\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={filterUsersAccordingToCountry} isChecked={checkedCountries[\"CA\"]}/>\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={filterUsersAccordingToCountry} isChecked={checkedCountries[\"DE\"]}/>\r\n      </S.Filters>\r\n      <S.List>\r\n        {filteredUsers.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n              ref={(index+1 === users?.length)? usersRef: null}\r\n            >\r\n              <S.UserPicture src={user?.picture?.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name?.title} {user?.name?.first} {user?.name?.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location?.street?.number} {user?.location?.street?.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location?.city} {user?.location?.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || state &&state[user?.email]}>\r\n                <div onClick={() =>toggleFavoriteUser(user)}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n                </div>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n})\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, {useRef, useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport { favoriteUsersContext } from '../../contexts';\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading, observer } = usePeopleFetch();\r\n  const {state, dispatch } = useContext(favoriteUsersContext);\r\n  let usersRef = useRef();\r\n\r\n  const setUsersRef = (ref) => {\r\n    if (observer) {\r\n      const { current } = ref;\r\n      if (current) { observer.observe(current); }\r\n    }\r\n  }\r\n\r\n  const toggleFavoriteUser = (user) => {\r\n    const userId = user?.email;\r\n    if (state[userId]) {\r\n        dispatch({ type: \"REMOVE_USER\", payload: { userId: userId } });\r\n    } else {\r\n        dispatch({ type: \"ADD_USER\", payload: { userId: userId, user: user } });\r\n    }\r\n}\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} toggleFavoriteUser={toggleFavoriteUser}\r\n        setUsersRef={setUsersRef} ref={usersRef} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const scrollCallback = async (entries) => {\r\n    if (entries[0].isIntersecting) {\r\n      setPage(page + 1);\r\n      await fetchUsers();\r\n    }\r\n  };\r\n\r\n  const observer = new IntersectionObserver(scrollCallback);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=${page}`);\r\n    setIsLoading(false);\r\n    const newUsers = [...users,...response.data.results];\r\n    setUsers(newUsers);\r\n  }\r\n\r\n  return { users, isLoading, observer };\r\n};\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { favoriteUsersContext } from '../../contexts';\r\nimport UserList from \"components/UserList\";\r\n\r\nconst FavoriteUserList = ({}) => {\r\n    const [favoriteUsers, setFavoriteUsers ] = useState([]);\r\n    const [isLoading, setIsLoading ] = useState(false);\r\n    const [updateFavoriteUsersFlag, setUpdateFavoriteUsersFlag] = useState(true);\r\n    const {state, dispatch } = useContext(favoriteUsersContext);\r\n\r\n    const toggleFavoriteUser = (user) => {\r\n        const userId = user?.email;\r\n        if (state[userId]) {\r\n            dispatch({ type: \"REMOVE_USER\", payload: { userId: userId } });\r\n        } else {\r\n            dispatch({ type: \"ADD_USER\", payload: { userId: userId, user: user } });\r\n        }\r\n        setUpdateFavoriteUsersFlag(!updateFavoriteUsersFlag)\r\n    }\r\n\r\n    const updateFavoriteUsers = () =>{\r\n        setFavoriteUsers(Object.values(state));\r\n    }\r\n\r\n    const fetchFavoriteUsers = () =>{\r\n        let newFavoriteUsers = localStorage.getItem('favoriteUsers');\r\n        if(newFavoriteUsers !== null){\r\n          newFavoriteUsers = JSON.parse(newFavoriteUsers);\r\n          setFavoriteUsers(Object.values(newFavoriteUsers));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        updateFavoriteUsers();\r\n    },[updateFavoriteUsersFlag])\r\n\r\n    useEffect(() =>{\r\n        setIsLoading(true);\r\n        fetchFavoriteUsers();\r\n        setIsLoading(false);\r\n    },[])\r\n\r\n      return (\r\n        <UserList users={favoriteUsers} isLoading={isLoading} toggleFavoriteUser={toggleFavoriteUser}/>\r\n    );\r\n};\r\n\r\nexport default FavoriteUserList;","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport FavoriteUserList from \"components/FavoriteUserList\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n    return (\r\n        <S.Favorites>\r\n            <S.Content>\r\n                <S.Header>\r\n                    <Text size=\"64px\" bold>\r\n                        Favorites\r\n                    </Text>\r\n                </S.Header>\r\n                <FavoriteUserList/>\r\n            </S.Content>\r\n        </S.Favorites>\r\n    );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst routes = [\"/\", \"/favorites\"]\r\n\r\nconst NavBar = () => {\r\n  const currentTab = () => {\r\n    const { pathname } = useLocation();\r\n    return routes.indexOf(pathname);\r\n  };\r\n\r\n  const [value, setValue] = useState(currentTab);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} component={Link} to={routes[0]}/>\r\n        <Tab label=\"Favorites\" index={1} component={Link} to={routes[1]}/>\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport { FavoriteUsersProvider } from \"contexts\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n      <FavoriteUsersProvider>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </FavoriteUsersProvider>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}